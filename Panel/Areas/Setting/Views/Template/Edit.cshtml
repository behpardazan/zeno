@using DataLayer.ViewModels;
@using DataLayer.Base;
@model DataLayer.Entities.Template
@{
    ViewBag.Title = "ویرایش قالب";
    Layout = "~/Views/Shared/Layout.cshtml";
}

@section Header {
    <link rel="stylesheet" type="text/css" href="~/assets/plugins/fileuploads/css/dropify.min.css" />
}

@section Script {
    <script src="~/assets/plugins/tinymce/tinymce.min.js"></script>
    <script src="~/assets/plugins/fileuploads/js/dropify.min.js"></script>
}

@using (Html.BeginForm("edit", "template", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.PictureId)
    <div class="col-sm-12">
        <div class="card-box">
            <a href="@Url.Action("index")" class="icon circle-icon glyphicon glyphicon-arrow-left" data-toggle="tooltip" data-placement="bottom" title="بازگشت"></a>
            <div class="col-sm-12">
                <div class="form-horizontal">
                    <div class="col-sm-6 no-padding">
                        <div>
                            <div class="col-md-10 col-md-offset-2">
                                <div class="row">
                                    @Html.Partial("~/Views/Public/Message.cshtml", (ViewMessage)ViewBag.Message)
                                </div>
                            </div>
                        </div>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.TypeId, "نوع قالب", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TypeId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, "نام قالب", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Label, "برچسب", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Label, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Label, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Author, "نویسنده", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Version, "نسخه", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="ذخیره" class="btn btn-success" />
                                <span class="btn btn-inverse">@Html.ActionLink("بازگشت", "Index")</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 no-padding-left">
                        @if (Model.Picture != null)
                        {
                            <input id="uplFile" type="file" class="dropify" name="file" codeprocess="upload" data-height="235" data-default-file="@Model.Picture.GetUrl()" />
                        }
                        else
                        {
                            <input id="uplFile" type="file" class="dropify" name="file" codeprocess="upload" data-height="235" />
                        }
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
}