@using DataLayer.ViewModels;
@model DataLayer.Entities.Question
@{
    ViewBag.Title = @Resource.Lang.Question;
    Layout = "~/Views/Shared/Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.AccountId)

    @Html.HiddenFor(model => model.CreateDate)

    <div class="col-sm-12">
        <div class="card-box">
            <a href="@Url.Action("index")" class="icon circle-icon glyphicon glyphicon-arrow-left" data-toggle="tooltip" data-placement="bottom" title=@Resource.Lang.Back></a>
            <div class="col-sm-6">
                <div class="form-horizontal">
                    @*<div>
            <div class="col-md-10 col-md-offset-2">
                <div class="row">
                    @Html.Partial("~/Views/Public/Message.cshtml", (ViewMessage)ViewBag.Message)
                </div>
            </div>
        </div>*@
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <label class = "control-label col-md-2">@Resource.Lang.FullName</label>
                        <div class="col-md-10">
                            <input type="text"  value="@Model.Account.FullName" class = "form-control"/>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.QuestionText, @Resource.Lang.Question, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Answer, @Resource.Lang.AnswerAdmin, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, @Resource.Lang.Approve, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsPrivate, "محرمانه", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IsPrivate, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.IsPrivate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value=@Resource.Lang.Save class="btn btn-success" />
                            <span class="btn btn-inverse">@Html.ActionLink(@Resource.Lang.Back, "Index")</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
}