@using DataLayer.Enumarables;

@model IEnumerable<DataLayer.ViewModels.ViewProductCustomField>
@{
    ViewBag.Title = Resource.Lang.ListOfPrivateField;
    Layout = "~/Views/Shared/Layout.cshtml";
    int? typeId = ViewBag.ProductTypeId;
    int? brandId = ViewBag.ProductBrandId;
    int? categoryId = ViewBag.ProductCategoryId;
    int? subCategoryId = ViewBag.ProductSubCategoryId;

    string back = "";
    if (typeId != null)
    {
        back = "producttype";
    }
    else if (categoryId != null)
    {
        back = "productcategory";
    }
    else if (subCategoryId != null)
    {
        back = "productsubcategory";
    }
    else if (brandId != null)
    {
        back = "productbrand";
    }

}
@section Footer {
    @Html.Action("TableScript", "Layout", new { area = "" })
}
@section Script {
    <script type="text/javascript">
        TableManageButtons.init();
    </script>
}
<div>
    <div class="col-sm-12">
        <div class="card-box table-responsive">
            <a href="@Url.Action("index", new { @controller = back })" class="icon circle-icon glyphicon glyphicon-arrow-left" data-toggle="tooltip" data-placement="bottom" title="بازگشت"></a>
            <a href="@Url.Action("create", new {
                    @typeId = typeId,
                    @categoryId = categoryId,
                    @subCategoryId = subCategoryId,
                    @brandId = brandId
                })" class="icon circle-icon glyphicon glyphicon-plus" data-toggle="tooltip" data-placement="bottom" title="افزودن مورد جدید"></a>
            <table id="datatable-buttons" class="table table-striped table-bordered has-first">
                <thead>
                    <tr>
                        <th class="first">#</th>
                        <th>@Resource.Lang.Name</th>
                        @if (typeId != null)
                        {
                            <th>@Resource.Lang.TypeProduct</th>
                        }
                        @if (categoryId != null)
                        {
                            <th>@Resource.Lang.Category</th>
                        }
                        @if (subCategoryId != null)
                        {
                            <th>@Resource.Lang.Subordinates</th>
                        }
                        @if (brandId != null)
                        {
                            <th>@Resource.Lang.Brand</th>
                        }
                        <th>@Resource.Lang.TypeField</th>
                        <th>@Resource.Lang.Forced_NotForced</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.RowId)</td>
                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                            @if (typeId != null)
                            {
                                <td>@Html.DisplayFor(modelItem => item.ProductType.Name)</td>
                            }
                            @if (categoryId != null)
                            {
                                <td>@Html.DisplayFor(modelItem => item.ProductCategory.Name)</td>
                            }
                            @if (subCategoryId != null)
                            {
                                <td>@Html.DisplayFor(modelItem => item.ProductSubCategory.Name)</td>
                            }
                            @if (brandId != null)
                            {
                                <td>@Html.DisplayFor(modelItem => item.ProductBrand.Name)</td>
                            }
                            <td>@Html.DisplayFor(modelItem => item.Type.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.IsRequired)</td>
                            <td>
                                @Html.ActionLink(Resource.Lang.Edit, "edit", new { id = item.Id }) |
                                @if (item.Type.Label == Enum_Code.FIELD_TYPE_DROPDOWN.ToString())
                                {
                                    @Html.ActionLink(Resource.Lang.Items, "index", new { id = item.Id, controller = "customproducttypeitem", action = "Index" }) <span>|</span>
                                }
                                @Html.ActionLink(Resource.Lang.Detail, "details", new { id = item.Id }) |
                                @Html.ActionLink(Resource.Lang.Delete, "delete", new { id = item.Id })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <!-- end col -->
</div>
