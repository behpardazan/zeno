@using DataLayer.Base;
@using DataLayer.ViewModels;
@model DataLayer.Entities.Sms
@{
    ViewBag.Title = Resource.Lang.SMS;
    Layout = "~/Views/Shared/Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)
    <a href="@Url.Action("index")" class="icon circle-icon glyphicon glyphicon-arrow-left" data-toggle="tooltip" data-placement="bottom" title=@Resource.Lang.Back></a>
    <div class="col-sm-12">
        <div class="card-box">
            <div class="col-sm-6">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Sender, Resource.Lang.Phone + ' ' + Resource.Lang.Sender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Sender", null, htmlAttributes: new { @class = "form-control" })

                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Sender, "نوع ارسال", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TypeId", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Receive, Resource.Lang.Phone + ' ' + Resource.Lang.Reciver, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Receive, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Receive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Body, Resource.Lang.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Token1, "Token1", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Token1, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Token1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Token2, "Token2", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Token2, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Token2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Token3, "Token3", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Token3, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Token3, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                    <span class="btn btn-inverse">@Html.ActionLink(@Resource.Lang.Back, "Index")</span>
                </div>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
}