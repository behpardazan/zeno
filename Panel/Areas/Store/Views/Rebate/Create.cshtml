@using DataLayer.ViewModels;
@using DataLayer.Enumarables;
@model DataLayer.Entities.Rebate
@{
    ViewBag.Title = Resource.Lang.RegisterNewDiscountCode;
    Layout = "~/Views/Shared/Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="col-sm-12">
        <div class="card-box">
            <a href="@Url.Action("index")" class="icon circle-icon glyphicon glyphicon-arrow-left" data-toggle="tooltip" data-placement="bottom" title=@Resource.Lang.Back></a>
            <div class="col-sm-6">
                <div class="form-horizontal">
                    <div>
                        <div class="col-md-10 col-md-offset-2">
                            <div class="row">
                                @Html.Partial("~/Views/Public/Message.cshtml", (ViewMessage)ViewBag.Message)
                            </div>
                        </div>
                    </div>
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.TypeId, Resource.Lang.DiscountType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TypeId", null, htmlAttributes: new { @class = "form-control", @codeprocess = "show-part" })
                        </div>
                    </div>*@
                    <input type="hidden" name="TypeId" value="2083" />
                    <div class="form-group" show-part="2083">
                        @Html.LabelFor(model => model.ShopId,Resource.Lang.Shop, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ShopId", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group" show-part="2084">
                        @Html.LabelFor(model => model.ProductTypeId, Resource.Lang.TypeProduct, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ProductTypeId", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group" show-part="2085">
                        @Html.LabelFor(model => model.ProductCategoryId,Resource.Lang.Category, htmlAttributes: new { @class = "control -label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ProductCategoryId", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group" show-part="2086">
                        @Html.LabelFor(model => model.ProductSubCategoryId, Resource.Lang.Subordinates, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ProductSubCategoryId", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group" show-part="2087">
                        @Html.LabelFor(model => model.ProductBrandId, Resource.Lang.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ProductBrandId", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, @Resource.Lang.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CodeValue, @Resource.Lang.DiscountCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CodeValue, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.CodeValue, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsPriceRebate, Resource.Lang.Percent+"/"+ Resource.Lang.Amount+"("+ Resource.Lang .Type+ ")", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <select class="form-control" id="IsPriceRebate" name="IsPriceRebate">
                                <option value="True">@Resource.Lang.Amount</option>
                                <option value="False">@Resource.Lang.Percent</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PercentValue, Resource.Lang.DiscountPercent, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PercentValue, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.PercentValue, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PriceValue, @Resource.Lang.DiscontAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PriceValue, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.PriceValue, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MinInvoiceValue, Resource.Lang.AtLeastFactorAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MinInvoiceValue, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.MinInvoiceValue, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MaxInvoiceValue,Resource.Lang.AtMostFacturAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MaxInvoiceValue, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.MaxInvoiceValue, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MaxRebatePrice, Resource.Lang.AtMostDiscountAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MaxRebatePrice, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.MaxRebatePrice, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.UseCount, @Resource.Lang.CountUse, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UseCount, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.UseCount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDatetime, @Resource.Lang.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StartDatetime, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", codeprocess= "date" } })
                            @Html.ValidationMessageFor(model => model.StartDatetime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EndDatetime, @Resource.Lang.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EndDatetime, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", codeprocess = "date" } })
                            @Html.ValidationMessageFor(model => model.EndDatetime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Active, @Resource.Lang.ActiveDeactive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Active)
                                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value=@Resource.Lang.Register class="btn btn-success" />
                            <span class="btn btn-inverse">@Html.ActionLink(Resource.Lang.Back, "Index")</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
}
