@using DataLayer.ViewModels;
@model DataLayer.Entities.Store

@{
    ViewBag.Title = Resource.Lang.RegisterNewShop;
    Layout = "~/Views/Shared/Layout.cshtml";
}
@section Header {
    <link rel="stylesheet" type="text/css" href="~/assets/plugins/fileuploads/css/dropify.min.css" />
}
@section Script {
    <script src="~/assets/plugins/tinymce/tinymce.min.js"></script>
    <script src="~/assets/plugins/fileuploads/js/dropify.min.js"></script>
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="col-sm-12">
        <div class="card-box">
            <a href="@Url.Action("index")" class="icon circle-icon glyphicon glyphicon-arrow-left" data-toggle="tooltip" data-placement="bottom" title=@Resource.Lang.Back></a>

            <div class="col-sm-6">
                <div class="form-horizontal">
                    <div>
                        <div class="col-md-10 col-md-offset-2">
                            <div class="row">
                                @*@Html.Partial("~/Views/Public/Message.cshtml", (ViewMessage)ViewBag.Message)*@
                            </div>
                        </div>
                    </div>

                    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ShopId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShopId, new { htmlAttributes = new { @class = "form-control", @autocomplete="off" } })
            @Html.ValidationMessageFor(model => model.ShopId, "", new { @class = "text-danger" })
            </div>
        </div>*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.AccountId, Resource.Lang.ManagerName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.AccountId, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })*@
                            @Html.DropDownList("AccountId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, Resource.Lang.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BenefitPercent, Resource.Lang.BenefitPercent, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BenefitPercent, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.BenefitPercent, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AddressValue, Resource.Lang.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AddressValue, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.AddressValue, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone1, Resource.Lang.FirstCallNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Phone1, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Phone1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone2, Resource.Lang.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Phone2, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Phone2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Fax, Resource.Lang.Fax, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Website, Resource.Lang.WebSiteName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, Resource.Lang.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BankName, Resource.Lang.Bank, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BankAccountNo, Resource.Lang.BankAccountNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BankAccountNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.BankAccountNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BankAccountCardNo, Resource.Lang.BankAccountCardNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BankAccountCardNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.BankAccountCardNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BankAccountShaba, Resource.Lang.BankAccountShaba, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BankAccountShaba, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.BankAccountShaba, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Approve, Resource.Lang.Approve, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Approve)
                                @Html.ValidationMessageFor(model => model.Approve, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Approve, "پیشنهاد محصول", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsSmartOffer)
                                @Html.ValidationMessageFor(model => model.IsSmartOffer, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Active, Resource.Lang.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Active)
                                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value=@Resource.Lang.Register class="btn btn-success" />
                            <span class="btn btn-inverse">@Html.ActionLink(Resource.Lang.Back, "Index")</span>
                        </div>
                    </div>
                </div>

            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PictureId, Resource.Lang.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.PictureId, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })*@
                        <input id="uplFile" type="file" class="dropify" name="file" codeprocess="upload-n" data-height="150" />
                        @Html.ValidationMessageFor(model => model.PictureId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            
            <div class="clearfix"></div>
        </div>
    </div>
}
