@using DataLayer.ViewModels;
@model DataLayer.Entities.EmailHost

@{
    ViewBag.Title = "نصب تنظیمات و اطلاعات وبسایت";
    Layout = "~/Areas/Start/Views/Shared/Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.ID)
    <div class="col-sm-6 no-padding">
        <div class="form-group">
            @Html.LabelFor(model => model.Name, "عنوان", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control ltr", @autocomplete = "off" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Pop3, "آدرس POP3", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Pop3, new { htmlAttributes = new { @class = "form-control ltr", @autocomplete = "off" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Pop3Port, "پورت POP3", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Pop3Port, new { htmlAttributes = new { @class = "form-control ltr", @autocomplete = "off" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Smtp, "آدرس SMTP", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Smtp, new { htmlAttributes = new { @class = "form-control ltr", @autocomplete = "off" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SmtpPort, "پورت SMTP", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.SmtpPort, new { htmlAttributes = new { @class = "form-control ltr", @autocomplete = "off" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Ssl, "SSL", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Ssl, new { htmlAttributes = new { @class = "margin-top-10", @autocomplete = "off" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AutoSync, "همسان سازی", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.AutoSync, new { htmlAttributes = new { @class = "margin-top-10", @autocomplete = "off" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Active, "فعال/غیرفعال", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "margin-top-10", @autocomplete = "off" } })
            </div>
        </div>
        <div>
            <div class="col-md-9 col-md-offset-3">
                <div class="row">
                    @Html.Partial("~/Views/Public/Message.cshtml", (ViewMessage)ViewBag.Message)
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ثبت" class="btn btn-success" />
            </div>
        </div>
    </div>
}
