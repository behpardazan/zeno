@using DataLayer.ViewModels;
@model DataLayer.Entities.Clearing

@{
    ViewBag.Title = Resource.Lang.NewClearing;
    Layout = "~/Views/Shared/Layout.cshtml";
}

@section Header {
    <link rel="stylesheet" type="text/css" href="~/assets/plugins/fileuploads/css/dropify.min.css" />
}

@section Script {
    <script src="~/assets/plugins/tinymce/tinymce.min.js"></script>
    <script src="~/assets/plugins/fileuploads/js/dropify.min.js"></script>
    <script>
        initializeClearingPageScript();
    </script>
}

@using (Html.BeginForm("create", "Clearing", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="col-sm-12 clearing_page">
        <div class="card-box">
            <a href="@Url.Action("index")" class="icon circle-icon glyphicon glyphicon-arrow-left" data-toggle="tooltip" data-placement="bottom" title="@Resource.Lang.Back"></a>
            <div class="col-sm-12">
                <div class="form-horizontal">
                    <div>
                        <div class="col-md-10 col-md-offset-2">
                            <div class="row">
                                @Html.Partial("~/Views/Public/Message.cshtml", (ViewMessage)ViewBag.msg)
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 no-padding">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.StoreId, @Resource.Lang.Store, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("StoreId", null, Resource.Lang.Choice, htmlAttributes: new { @class = "form-control", @autocomplete = "off" })
                                @*@Html.ValidationMessageFor(model => model.StoreId, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CodeId, Resource.Lang.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("CodeId", null, htmlAttributes: new { @class = "form-control" })
                                @*@Html.ValidationMessageFor(model => model.CodeId, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, Resource.Lang.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @*@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.FromAccount, Resource.Lang.FromAccount, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.FromAccount, htmlAttributes: new { @class = "form-control", @autocomplete = "off" })
                                @*@Html.ValidationMessageFor(model => model.FromAccount, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ToAccount, Resource.Lang.ToAccount, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.ToAccount, htmlAttributes: new { @class = "form-control", @autocomplete = "off" })
                                @*@Html.ValidationMessageFor(model => model.ToAccount, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Detail, Resource.Lang.Summery, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Detail, htmlAttributes: new { @class = "form-control", @autocomplete = "off" })
                                @*@Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Detail, Resource.Lang.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 ">
                                <input id="date" class="form-control" autocomplete="off" codeprocess="date-init" name="date" />
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="ثبت" class="btn btn-success" />
                                <span class="btn btn-inverse">@Html.ActionLink(Resource.Lang.Back, "Index")</span>
                            </div>
                        </div>


                    </div>
                    <div class="col-sm-6 ">
                        <div class="form-group">
                            @Html.Label(Resource.Lang.Picture, htmlAttributes: new { @class = "control-label col-md-2" })

                            <div class="col-md-offset-2 col-md-10">
                                <input id="uplFile" type="file" class="dropify" name="file" codeprocess="upload-n" data-height="290" />
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
}

